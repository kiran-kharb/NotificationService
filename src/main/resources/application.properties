#spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
#mysql configuration

server.port = 8090
#hibernate
spring.jpa.properties.hibernate.format_sql=true 
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL57Dialect
spring.datasource.url=jdbc:mysql://localhost:3306/SmsService
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
server.error.include-message=always

#Kafka configurations


spring.kafka.consumer.bootstrap-servers= localhost:9092
spring.kafka.consumer.group-id= consumerGroup
spring.kafka.consumer.auto-offset-reset= latest
spring.kafka.consumer.key-deserializer= org.apache.kafka.common.serialization.IntegerDeserializer 
spring.kafka.consumer.value-deserializer= org.apache.kafka.common.serialization.IntegerDeserializer
#spring.kafka.consumer.value-deserializer= org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.producer.bootstrap-servers= localhost:9092
spring.kafka.producer.key-serializer= org.apache.kafka.common.serialization.IntegerSerializer 
spring.kafka.producer.value-serializer= org.apache.kafka.common.serialization.IntegerSerializer
#spring.kafka.producer.value-serializer= org.springframework.kafka.support.serializer.JsonSerializer

spring.kafka.topic.name=smsService1
